{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/pipes/safe-html.pipe.ts","webpack:///./src/app/quill-editor/quill-editor.component.css","webpack:///./src/app/quill-editor/quill-editor.component.html","webpack:///./src/app/quill-editor/quill-editor.component.ts","webpack:///./src/app/quill-editor/quillConfig.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<app-quill-editor [(ngModel)]=\\\"textContent\\\"></app-quill-editor>\\n\\n<hr>\\n\\n<h5>Inserted Text Preview</h5>\\n<div class=\\\"quill-preview\\\" [innerHTML]=\\\"textContent | safehtml\\\"></div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'quill-text-editor';\n\n  textContent = 'ARYA FOR PRESIDENT';\n\n  consoleText(text) {\n    console.log(text);\n  }\n}\n","import { SafehtmlPipe } from './pipes/safe-html.pipe';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { QuillEditorComponent } from './quill-editor/quill-editor.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuillEditorComponent,\n    SafehtmlPipe\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safehtml'\n})\nexport class SafehtmlPipe implements PipeTransform {\n\n  constructor(private _sanitizer: DomSanitizer) {}\n\n  transform(v: string , args?: any): SafeHtml {\n    return this._sanitizer.bypassSecurityTrustHtml(v);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div #quillToolbar>\\n  <span class=\\\"ql-formats\\\">\\n    <button class=\\\"ql-bold\\\"></button>\\n    <button class=\\\"ql-italic\\\"></button>\\n    <button class=\\\"ql-underline\\\"></button>\\n    <button class=\\\"ql-strike\\\"></button>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <select class=\\\"ql-color\\\"></select>\\n    <select class=\\\"ql-background\\\"></select>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <button class=\\\"ql-script\\\" value=\\\"sub\\\"></button>\\n    <button class=\\\"ql-script\\\" value=\\\"super\\\"></button>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <select class=\\\"ql-header\\\" value=\\\"1\\\"></select>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <button class=\\\"ql-list\\\" value=\\\"ordered\\\"></button>\\n    <button class=\\\"ql-list\\\" value=\\\"bullet\\\"></button>\\n    <button class=\\\"ql-indent\\\" value=\\\"-1\\\"></button>\\n    <button class=\\\"ql-indent\\\" value=\\\"+1\\\"></button>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <button class=\\\"ql-direction\\\" value=\\\"rtl\\\"></button>\\n    <select class=\\\"ql-align\\\"></select>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <button class=\\\"ql-link\\\"></button>\\n    <button class=\\\"ql-image\\\"></button>\\n    <button class=\\\"ql-video\\\"></button>\\n  </span>\\n  <span class=\\\"ql-formats\\\">\\n    <button *ngFor=\\\"let customButton of customButtons\\\" [ngClass]=\\\"customButton.type\\\" (click)=\\\"insertVariable(customButton.type)\\\">{{customButton.label}}</button>\\n  </span>\\n</div>\\n\\n<div #quillEditor>\\n</div>\\n\"","import { DEFAULT_QUILL_CONFIG, CUSTOM_VARIABLE_BUTTONS } from './quillConfig';\nimport { Component, OnInit, ViewChild, AfterViewInit, ElementRef, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormBuilder } from '@angular/forms';\n\nimport * as Quill from 'quill';\n\n@Component({\n  selector: 'app-quill-editor',\n  templateUrl: './quill-editor.component.html',\n  styleUrls: ['./quill-editor.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => QuillEditorComponent),\n    }\n  ]\n})\nexport class QuillEditorComponent implements OnInit {\n\n  quill: Quill;\n  quillEditor: HTMLElement;\n  quillToolbar: HTMLElement;\n\n  editorElem: HTMLElement;\n  quillContent = '';\n\n\n  @Input() name = 'quill-editor';\n  @Input() required = false;\n  @Input() customButtons = CUSTOM_VARIABLE_BUTTONS;\n\n  @Input() set ngModel (ngModel: string) {\n    if (ngModel) {\n      this.quillContent = ngModel;\n    }\n  }\n  @Output() ngModelChange: EventEmitter<string> = new EventEmitter();\n\n  constructor(\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.createQuillEditorElement();\n    this.initQuillEditor();\n    this.setInitialContent();\n  }\n\n  createQuillEditorElement() {\n    this.quillToolbar = this.elementRef.nativeElement.children[0];\n    this.quillEditor = this.elementRef.nativeElement.children[1];\n  }\n\n  initQuillEditor() {\n    this.quill = new Quill(this.quillEditor, Object.assign({\n      modules: {\n        toolbar: this.quillToolbar\n      },\n      placeholder: 'Insert text here ...',\n      readOnly: false,\n      theme: 'snow',\n      boundary: document.body\n    }, {}));\n\n    Quill.register(Quill.import('attributors/style/align'), true);\n    this.quill.on('text-change', this.emitQuillText.bind(this));\n  }\n\n  setInitialContent() {\n    this.quill.root.innerHTML = this.quillContent;\n  }\n\n\n  emitQuillText() {\n    this.quillContent = this.quill.root.innerHTML === '<p><br></p>' ? null : this.quill.root.innerHTML;\n    this.ngModelChange.emit(this.quillContent);\n  }\n\n  insertVariable(variableText: string) {\n    const selection = this.quill.getSelection(true);\n    this.quill.insertText(selection.index, ` ${variableText} `);\n  }\n\n  // These methods are required for the NgModel binding to work properly\n  writeValue() {\n  }\n\n  registerOnChange() {\n  }\n\n  registerOnTouched() {\n  }\n\n}\n","\nexport const TOOLBAR_OPTIONS = {\n  FONT_STYLES: ['bold', 'italic', 'underline', 'strike'],\n  FONT_FORMATS: ['blockquote', 'code-block'],\n\n  HTML_TEXT_FORMATS: [{ 'header': 1 }, { 'header': 2 }],\n  LIST_FORMATS: [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n\n  SUPER_SUB_SCRIPT: [{ 'script': 'sub' }, { 'script': 'super' }],\n  TEXT_INDENT: [{ 'indent': '-1' }, { 'indent': '+1' }],\n  TEXT_DIRECTION: [{ 'direction': 'rtl' }],\n\n  FONT_SIZE: [{ 'size': ['small', false, 'large', 'huge'] }],\n  HTML_TEXT_FORMAT_DROPDOWN: [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\n\n  COLORS: [{ 'color': [] }, { 'background': [] }],\n  FONT_FAMILY: [{ 'font': [] }],\n  TEXT_ALIGN: [{ 'align': [] }],\n\n  CLEAR: ['clean'],\n  HYPERLINK: ['link'],\n  IMAGE: ['image'],\n  VIDEO: ['video'],\n};\n\nexport enum TOOLBAR_BUTTONS {\n  BOLD = 'ql-bold',\n  ITALIC = 'ql-italic',\n  UNDERLINE = 'ql-underline',\n  STRIKE = 'ql-strike'\n\n}\n\nexport const DEFAULT_QUILL_CONFIG = {\n  toolbar: [\n    TOOLBAR_OPTIONS.FONT_STYLES,\n    TOOLBAR_OPTIONS.LIST_FORMATS,\n    TOOLBAR_OPTIONS.FONT_SIZE,\n    TOOLBAR_OPTIONS.HTML_TEXT_FORMAT_DROPDOWN,\n    TOOLBAR_OPTIONS.COLORS,\n    TOOLBAR_OPTIONS.TEXT_ALIGN,\n    TOOLBAR_OPTIONS.HYPERLINK,\n  ],\n};\n\nexport const DEFAULT_QUILL_TOOLBAR = [\n  TOOLBAR_BUTTONS.BOLD,\n  TOOLBAR_BUTTONS.ITALIC,\n  TOOLBAR_BUTTONS.UNDERLINE\n];\n\nexport const CUSTOM_VARIABLE_BUTTONS = [\n  { type: 'Jon Snow', label: 'Jon' },\n  { type: 'Daenerys Targaryen', label: 'Dany' },\n  { type: 'Cersei Lannister', label: 'Cersei' },\n]\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}